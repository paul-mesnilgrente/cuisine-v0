<?php

namespace AppBundle\Repository;

use AppBundle\Entity\User;

/**
 * RayonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RayonRepository extends \Doctrine\ORM\EntityRepository
{
    public function getListe(User $user) {
        return $this->_em->createQuery('
            SELECT ldc
                 AppBundle:ListeDeCourse ldc,
            WHERE
                ldc.user = :user
            ORDER BY r.nom ASC')
            ->setParameter('user', $user)
            ->getResult();
    }

    public function getIngredients() {
        $qb = $this->createQueryBuilder('rayon')
            ->join('rayon.produits', 'produit')
            ->join('produit.rayons' ,'rayonProduit')
            ->where('produit INSTANCE OF AppBundle\Entity\Ingredient')
            ->addSelect('produit')
            ->addSelect('rayonProduit');

        return $qb->getQuery()->getResult();
    }

    public function getProduits() {
        $qb = $this->createQueryBuilder('rayon')
            ->join('rayon.produits', 'produit')
            ->join('produit.rayons' ,'rayonProduit')
            ->where('produit INSTANCE OF AppBundle\Entity\Produit')
            ->addSelect('produit')
            ->addSelect('rayonProduit');

        return $qb->getQuery()->getResult();
    }

    public function rechercherProduits($caracteres) {
        $qb = $this->createQueryBuilder('r')
            ->join('r.produits', 'p')
            ->join('p.rayons' ,'r1')
            ->where("p.nom LIKE :caracteres")
            ->addSelect('p')
            ->addSelect('r1')
            ->setParameter('caracteres', '%'.$caracteres.'%');;

        return $qb->getQuery()->getResult();
    }
}
